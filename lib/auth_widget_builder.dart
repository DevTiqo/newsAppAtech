// import 'package:newsapp/models/user.dart';
// import 'package:newsapp/notifiers/auth_notifier.dart';
// import 'package:newsapp/pages/home/userprefs.dart';

// import 'package:flutter/material.dart';
// import 'package:riverpod/riverpod.dart';

// /// Used to create user-dependant objects that need to be accessible by all widgets.
// /// This widget should live above the [MaterialApp].
// /// See [AuthWidget], a descendant widget that consumes the snapshot generated by this builder.

// class AuthWidgetBuilder extends StatelessWidget {
//   const AuthWidgetBuilder({Key? key, required this.builder}) : super(key: key);
//   final Widget Function(BuildContext, AsyncSnapshot<User?>) builder;

//   @override
//   Widget build(BuildContext context) {
//     bool isLoggedIn = false;
//     User? currentUser;

//     chek(BuildContext context) async {
//       currentUser = await UserPreferences().getUser();

//       // print(currentUser.token);
//       return currentUser;
//     }

//     print('AuthWidgetBuilder rebuild');
//     final authService = Provider.of<AuthNotifier>(context, listen: false);
//     return FutureBuilder<User?>(
//       future: chek(context),
//       builder: (context, snapshot) {
//         print('StreamBuilder: ${snapshot.connectionState}');
//         final User? user = snapshot.data as User;
//         if (user != null) {
//           // Provider.of<AuthNotifier>(context, listen: false).setUser(user);

//           return builder(context, snapshot);
//         }
//         return builder(context, snapshot);
//       },
//     );
//   }
// }
